// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String      @unique
  password      String
  image         String?
  balance       Float       @default(10000)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  isAdmin       Boolean     @default(false)
  trades        Trade[]
  stocks        UserStock[]
}

model Stock {
  id                  String       @id @default(cuid())
  symbol              String       @unique
  name                String
  currentPrice        Float
  previousPrice       Float
  dayHigh             Float
  dayLow              Float
  dayOpen             Float
  marketCap           Float
  volume              Int
  isActive            Boolean      @default(true)
  randomUpdateActive  Boolean      @default(true)
  jumpProbability     Float        @default(0.005)
  jumpMultiplierMax   Float        @default(1.15)
  jumpMultiplierMin   Float        @default(0.85)
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  pricePoints         PricePoint[]
  trades              Trade[]
  users               UserStock[]
}

model PricePoint {
  id        String   @id @default(cuid())
  stockId   String
  stock     Stock    @relation(fields: [stockId], references: [id], onDelete: Cascade)
  price     Float
  timestamp DateTime @default(now())
  
  @@index([stockId])
}

model Trade {
  id        String    @id @default(cuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  stockId   String
  stock     Stock     @relation(fields: [stockId], references: [id], onDelete: Cascade)
  type      TradeType
  quantity  Int
  price     Float
  total     Float
  timestamp DateTime  @default(now())
  
  @@index([userId])
  @@index([stockId])
}

model UserStock {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  stockId   String
  stock     Stock    @relation(fields: [stockId], references: [id], onDelete: Cascade)
  quantity  Int
  avgPrice  Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([userId, stockId])
  @@index([userId])
  @@index([stockId])
}

enum TradeType {
  BUY
  SELL
}
